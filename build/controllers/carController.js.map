{"version":3,"sources":["../../src/controllers/carController.js"],"names":["carDb","require","Car","req","res","status","send","message","cars","id","parseInt","params","map","car","priceInput","min_price","body","max_price","carFound","filter","state","price","json","error","data","bodyType","owner","make","model","imgUrl","description","currentDate","Date","date","getFullYear","getMonth","getDate","length","createdOn","push","itemIndex","index","success","updateCar","splice","newCar","carController","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable array-callback-return */\n/* eslint-disable consistent-return */\n/* eslint-disable class-methods-use-this */\n// jshint esversion: 6\nconst carDb = require('../data/cars');\n\nclass Car {\n  // getting all the car\n  getAllCars(req, res) {\n    return res.status(200).send({\n      status: 200,\n      message: 'Succes',\n      cars: carDb,\n    });\n  }\n\n  // getting a single car\n  getCarById(req, res) {\n    const id = parseInt(req.params.id, 10);\n    carDb.map((car) => {\n      if (car.id === id) {\n        return res.status(201).send({\n          status: 201,\n          message: 'Success',\n          car,\n        });\n      }\n    });\n    return res.status(404).send({\n      status: 400,\n      message: 'Failled to retrieve, car does not existe',\n    });\n  }\n\n  // Searching a car By price range, make and state\n  searchCarBy(req, res) {\n    const priceInput = {\n      min_price: req.body.min_price,\n      max_price: req.body.max_price,\n    };\n    const carFound = carDb.filter(car => car.status === 'available' && car.state === 'used' && car.price >= priceInput.min_price && car.price <= priceInput.max_price);\n    if (!carFound) {\n      res.status(404).json({\n        status: 404,\n        error: 'there are no cars within that price range not found',\n      });\n      return;\n    }\n    return res.status(201).send({\n      status: 201,\n      message: 'success',\n      data: carFound,\n    });\n  }\n\n  // getting car by status\n  getCarByStatus(req, res) {\n    const carFound = carDb.filter(car => car.status === 'available');\n    if (!carFound) {\n      return res.status(400).send({\n        status: 400,\n        message: 'Failled, car not found',\n      });\n    }\n    return res.status(201).send({\n      status: 201,\n      message: 'Found',\n      data: carFound,\n    });\n  }\n\n  // get car by body type\n  getCarByBodyType(req, res) {\n    const carFound = carDb.filter(car => car.status === 'available' && car.bodyType);\n    if (!carFound) {\n      return res.status(400).send({\n        status: 400,\n        message: 'Failled, car not found',\n      });\n    }\n    return res.status(201).send({\n      status: 201,\n      message: 'Found',\n      data: carFound,\n    });\n  }\n\n  // Post a car\n  postCar(req, res) {\n    if (!req.body.owner) {\n      return res.status(400).send({\n        status: 400,\n        message: 'Failled to post, you do not have an account',\n      });\n    }\n    if (!req.body.state) {\n      return res.status(400).send({\n        status: 400,\n        message: 'Failled to post, State is missing',\n      });\n    }\n    if (!req.body.status) {\n      return res.status(400).send({\n        status: 400,\n        message: 'Failled to post, Status is missing',\n      });\n    }\n    if (!req.body.price) {\n      return res.status(400).send({\n        status: 400,\n        message: 'Failled to post, Price is missing',\n      });\n    }\n    if (!req.body.make) {\n      return res.status(400).send({\n        status: 400,\n        message: 'Failled to post, Manufactuure(Make) is missing',\n      });\n    }\n    if (!req.body.model) {\n      return res.status(400).send({\n        status: 400,\n        message: 'Failled to post, Model is missing',\n      });\n    }\n    if (!req.body.bodyType) {\n      return res.status(400).send({\n        status: 400,\n        message: 'Failled to post, Body type is missing',\n      });\n    }\n    if (!req.body.imgUrl) {\n      return res.status(400).send({\n        status: 400,\n        message: 'Failled to post, Image is missing',\n      });\n    }\n    if (!req.body.description) {\n      return res.status(400).send({\n        status: 400,\n        message: 'Failled to post, description is missing',\n      });\n    }\n\n    const currentDate = new Date();\n    const date = `${currentDate.getFullYear()}-${currentDate.getMonth() + 1}-${currentDate.getDate()}`;\n    const car = {\n      id: carDb.length + 1,\n      owner: req.body.owner,\n      state: req.body.state,\n      status: req.body.status,\n      createdOn: date,\n      price: req.body.price,\n      make: req.body.make,\n      model: req.body.model,\n      bodyType: req.body.bodyType,\n      imgUrl: req.body.imgUrl,\n      description: req.body.description,\n    };\n\n    carDb.push(car);\n    return res.status(201).send({\n      status: 'true',\n      message: 'car added successfully',\n      car,\n    });\n  }\n\n  // Update price\n  updatePrice(req, res) {\n    const id = parseInt(req.params.id, 10);\n    let carFound;\n    let itemIndex;\n    carDb.map((car, index) => {\n      if (car.id === id) {\n        carFound = car;\n        itemIndex = index;\n      }\n    });\n    if (!carFound) {\n      return res.status(404).send({\n        status: 404,\n        message: 'Failed to update, car not found',\n      });\n    }\n    if (!req.body.price) {\n      return res.status(400).send({\n        success: 400,\n        message: 'Failed to update, require price',\n      });\n    }\n\n    const updateCar = {\n      id: carFound.id,\n      owner: carFound.owner,\n      state: carFound.state,\n      status: carFound.status,\n      createdOn: carFound.createdOn,\n      price: req.body.price || carFound.price,\n      make: carFound.make,\n      model: carFound.model,\n      bodyType: carFound.bodyType,\n      imgUrl: carFound.imgUrl,\n      description: carFound.description,\n    };\n\n    carDb.splice(itemIndex, 1, updateCar);\n    return res.status(201).send({\n      success: 'true',\n      message: 'car added successfully',\n      updateCar,\n    });\n  }\n\n  // Mark Car as sold\n  markCarAsSold(req, res) {\n    const id = parseInt(req.params.id, 10);\n    let carFound;\n    let itemIndex;\n    carDb.map((car, index) => {\n      if (car.id === id) {\n        carFound = car;\n        itemIndex = index;\n      }\n    });\n    if (!carFound) {\n      return res.status(404).send({\n        status: 404,\n        message: 'Failed to update, car not found',\n      });\n    }\n\n    const newCar = {\n      id: carFound.id,\n      owner: carFound.owner,\n      state: carFound.state,\n      status: 'sold',\n      createdOn: carFound.createdOn,\n      price: carFound.price,\n      make: carFound.make,\n      model: carFound.model,\n      bodyType: carFound.bodyType,\n      imgUrl: carFound.imgUrl,\n      description: carFound.description,\n    };\n\n    carDb.splice(itemIndex, 1, newCar);\n    return res.status(201).send({\n      success: 'true',\n      message: 'car added successfully',\n      newCar,\n    });\n  }\n\n  // Delete a posted car\n  deleteCar(req, res) {\n    const id = parseInt(req.params.id, 10);\n    let carFound;\n    let itemIndex;\n    carDb.map((car, index) => {\n      if (car.id === id) {\n        carFound = car;\n        itemIndex = index;\n      }\n    });\n\n    if (!carFound) {\n      return res.status(404).send({\n        success: 'false',\n        message: 'car not found',\n      });\n    }\n    carDb.splice(itemIndex, 1);\n\n    return res.status(200).send({\n      success: 'true',\n      message: 'car deleted successfuly',\n    });\n  }\n}\n\nconst carController = new Car();\nmodule.exports = carController;\n"],"file":"carController.js"}