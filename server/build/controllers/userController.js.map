{"version":3,"sources":["../../src/controllers/userController.js"],"names":["jwt","require","userDb","User","req","res","status","send","message","users","id","parseInt","params","map","user","userSchema","email","body","password","userFound","find","e","json","error","p","token","sign","expiresIn","data","firstName","lastName","address","length","isAdmin","push","itemIndex","index","description","splice","userController","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable class-methods-use-this */\n// jshint esversion: 6\n\nconst jwt = require('jsonwebtoken');\nconst userDb = require('../data/users');\n\nclass User {\n  getAllUsers(req, res) {\n    return res.status(200).send({\n      status: 200,\n      message: 'Success',\n      users: userDb,\n    });\n  }\n\n  getUserById(req, res) {\n    const id = parseInt(req.params.id, 10);\n    userDb.map((user) => {\n      if (user.id === id) {\n        return res.status(200).send({\n          status: 200,\n          message: 'status!!',\n          user,\n        });\n      }\n    });\n    return res.status(404).send({\n      status: 404,\n      message: 'Failed to retrieve, user not found',\n    });\n  }\n\n  singIn(req, res) {\n    const userSchema = {\n      email: req.body.email,\n      password: req.body.password,\n    };\n    const userFound = userDb.find(e => e.email === userSchema.email);\n\n    if (!userFound) {\n      return res.status(404).json({\n        status: 404,\n        error: 'User not found',\n      });\n    }\n    const password = userDb.find(p => p.password === req.body.password);\n    if (!password) {\n      return res.status(400).json({\n        status: 400,\n        error: 'Incorrect password',\n      });\n    }\n    const token = jwt.sign(userFound, 'SECRET_KEY', { expiresIn: '24hrs' });\n    return res.status(200).json({\n      status: 200,\n      data: {\n        token,\n        id: userFound.id,\n        firstName: userFound.firstName,\n        lastName: userFound.lastName,\n        email: userFound.email,\n      },\n    });\n  }\n\n  singUp(req, res) {\n    // Check user input if empty\n    if (!req.body.email) {\n      return res.status(400).send({\n        status: 400,\n        message: 'email is required',\n      });\n    }\n    if (!req.body.firstName) {\n      return res.status(400).send({\n        status: 'false',\n        message: 'First Name is required',\n      });\n    }\n    if (!req.body.lastName) {\n      return res.status(400).send({\n        status: 'false',\n        message: 'Last Name is required',\n      });\n    }\n    if (!req.body.address) {\n      return res.status(400).send({\n        status: 'false',\n        message: 'Address is required',\n      });\n    }\n    if (!req.body.password) {\n      return res.status(400).send({\n        status: 'false',\n        message: 'Password is required',\n      });\n    }\n\n    const user = {\n      id: userDb.length + 1,\n      email: req.body.email,\n      firstName: req.body.firstName,\n      lastName: req.body.lastName,\n      address: req.body.address,\n      password: req.body.password,\n      isAdmin: false,\n    };\n    const token = jwt.sign(user, 'SECRET_KEY', { expiresIn: '24hrs' });\n    userDb.push(user);\n    return res.status(201).send({\n      status: 201,\n      message: 'user added statusfully',\n      data: {\n        token,\n        id: user.id,\n        email: user.email,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        address: user.address,\n        isAdmin: user.isAdmin,\n      },\n    });\n  }\n\n  updateUser(req, res) {\n    const id = parseInt(req.params.id, 10);\n    let userFound;\n    let itemIndex;\n    userDb.map((user, index) => {\n      if (user.id === id) {\n        userFound = user;\n        itemIndex = index;\n      }\n    });\n\n    if (!userFound) {\n      return res.status(404).send({\n        status: 'false',\n        message: 'user not found',\n      });\n    }\n\n    if (!req.body.email) {\n      return res.status(400).send({\n        status: 'false',\n        message: 'title is email',\n      });\n    } if (!req.body.firstName) {\n      return res.status(400).send({\n        status: 'false',\n        message: 'description is First Name',\n      });\n    } if (!req.body.lastName) {\n      return res.status(400).send({\n        status: 'false',\n        message: 'description is Last Name',\n      });\n    } if (!req.body.address) {\n      return res.status(400).send({\n        status: 'false',\n        message: 'description is address',\n      });\n    }\n\n    const user = {\n      id: userFound.id,\n      email: req.body.email || userFound.email,\n      firstName: req.body.firstName || userFound.description,\n      lastName: req.body.lastName || userFound.lastName,\n      address: req.body.address || userFound.address,\n      password: userFound.password,\n      isAdmin: userFound.isAdmin,\n    };\n\n    userDb.splice(itemIndex, 1, user);\n\n    return res.status(201).send({\n      status: 'true',\n      message: 'user added statusfully',\n      user,\n    });\n  }\n\n  deleteUser(req, res) {\n    const id = parseInt(req.params.id, 10);\n    let userFound;\n    let itemIndex;\n    userDb.map((user, index) => {\n      if (user.id === id) {\n        userFound = user;\n        itemIndex = index;\n      }\n    });\n\n    if (!userFound) {\n      return res.status(404).send({\n        status: 'false',\n        message: 'user not found',\n      });\n    }\n    userDb.splice(itemIndex, 1);\n\n    return res.status(200).send({\n      status: 'true',\n      message: 'user deleted statusfuly',\n    });\n  }\n}\n\nconst userController = new User();\nmodule.exports = userController;\n"],"file":"userController.js"}