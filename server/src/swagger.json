{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Automart",
        "description": "Auto Mart is an online marketplace for automobiles of diverse makes, model or body type. With Auto Mart, can sell their cars or buy from trusted dealerships or private sellers",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "host": "localhost:3000",
    "tags": [
        {
            "name": "users",
            "description": "API for users"
        },
        {
            "name": "cars",
            "description": "API for car"
        },
        {
            "name": "orders",
            "description": "API for orders"
        },
        {
            "name": "flags",
            "description": "API for flags(report)"
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/api/v1/getAllUsers": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "get all user",
                "description": "getting all user",
                "parameters": [{
                    "name": "users",
                    "in": "body",
                    "description": "user",
                    "schema": {
                        "$ref": "#/definitions/getuser"
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/v1/getUserById/id": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "get all user",
                "description": "getting all user",
                "parameters": [{
                    "name": "users",
                    "in": "body",
                    "description": "user",
                    "schema": {
                        "$ref": "#/definitions/getuser"
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/v1/auth/singIn": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Login a user",
                "description": "Login a user",
                "parameters": [{
                    "name": "users",
                    "in": "body",
                    "description": "user that we want to login",
                    "schema": {
                        "$ref": "#/definitions/signin"
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "success: successfully login"
                    },
                    "404": {
                        "description": "Error: User not found"
                    },
                    "400": {
                        "description": "Error: invalid input"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/v1/auth/singUp": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Singup a user",
                "description": "Singup a user",
                "parameters": [{
                    "name": "users",
                    "in": "body",
                    "description": "user that we want to create",
                    "schema": {
                        "$ref": "#/definitions/singup"
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "success: successfully created"
                    },
                    "400": {
                        "description": "Error: invalid input"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/v1/deleteUsers/id": {
            "delete": {
                "tags": [
                    "users"
                ],
                "summary": "delete a user",
                "description": "delete a user",
                "parameters": [{
                    "name": "users",
                    "in": "body",
                    "description": "user that we want to delete",
                    "schema": {
                        "$ref": "#/definitions/deleteuser"
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "success: successfully updated"
                    },
                    "400": {
                        "description": "Error: invalid input"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/v1/updateUsers/{id}": {
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "update a user",
                "description": "update a user",
                "parameters": [{
                    "name": "users",
                    "in": "body",
                    "description": "user that we want to create",
                    "schema": {
                        "$ref": "#/definitions/updateuser"
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "success: successfully updated"
                    },
                    "400": {
                        "description": "Error: invalid input"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },


        "/api/v1/addCar": {
            "post": {
                "tags": [
                    "cars"
                ],
                "summary": "Post a car sale ad",
                "description": "User(seller) can Post a car sale advert",
                "parameters": [{
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true

                    },
                    {
                        "name": "car sale ad",
                        "in": "body",
                        "description": "details of a car sale you want to post",
                        "schema": {
                            "$ref": "#/definitions/addCar"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "success: when a car ad is sucessfully posted"
                    },
                    "400": {
                        "description": "Error: this is when someone  puts an invalid value"
                    },
                    "401": {
                        "description": "Error: this is when someone tries to post a car sale ad when he is not authorized"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/v1/updatePrice/:id": {
            "patch": {
                "tags": [
                    "cars"
                ],
                "summary": "update price of the car",
                "description": "user can update price",
                "parameters": [{
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true

                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "car id",
                        "required": true,
                        "type": "integer"

                    },
                    {
                        "name": "new status of car posted",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/updatePrice"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "success: car succesfully marked as sold"
                    },
                    "400": {
                        "description": "Error: this is when someone  puts an invalid value"
                    },
                    "404": {
                        "description": "Error: car not found"
                    },
                    "401": {
                        "description": "Error: this is when someone tries to mark a car when he is not authorized"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/v1/markAsSold/id": {
            "patch": {
                "tags": [
                    "cars"
                ],
                "summary": "mark a posted car ad as sold",
                "description": "seller can mark a posted ad as sold",
                "parameters": [{
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true

                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "car id",
                        "required": true,
                        "type": "integer"

                    },
                    {
                        "name": "new status of car posted",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/markAsSold"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "success: car succesfully marked as sold"
                    },
                    "400": {
                        "description": "Error: this is when someone  puts an invalid value"
                    },
                    "404": {
                        "description": "Error: car not found"
                    },
                    "401": {
                        "description": "Error: this is when someone tries to mark a car when he is not authorized"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/v1/getAllCar": {
            "get": {
                "tags": [
                    "cars"
                ],
                "summary": "Get all posted car Ads",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "name": "cars",
                    "in": "body",
                    "description": "get all cars",
                    "schema":{
                         "$ref": "#/definitions/getAllCar"
                    }

                }],
                "responses": {
                    "200": {
                        "description": "success: "
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/v1/getCarById/:id": {
            "get": {
                "tags": [
                    "cars"
                ],
                "summary": "get a single car",
                "description": "getting a single car",
                "parameters": [{
                    "name": "cars",
                    "in": "body",
                    "description": "cars",
                    "schema": {
                        "$ref": "#/definitions/getCarById"
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/v1/getCarByStatus/:status'": {
            "get": {
                "tags": [
                    "cars"
                ],
                "summary": "get a car by status",
                "description": "getting car by status",
                "parameters": [{
                    "name": "cars",
                    "in": "body",
                    "description": "cars",
                    "schema": {
                        "$ref": "#/definitions/getCarById"
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/v1/searchCarBy/:status/:min/:max/:make": {
            "get": {
                "tags": [
                    "cars"
                ],
                "summary": "search car by price range and make(manufacture)",
                "description": "Search car",
                "parameters": [{
                    "name": "cars",
                    "in": "body",
                    "description": "cars",
                    "schema": {
                        "$ref": "#/definitions/getCarById"
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/v1/getCarByBodyType/:bodyType": {
            "get": {
                "tags": [
                    "cars"
                ],
                "summary": "get car by body type",
                "description": "getting car by body type",
                "parameters": [{
                    "name": "cars",
                    "in": "body",
                    "description": "cars",
                    "schema": {
                        "$ref": "#/definitions/getCarById"
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "success"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/v1/deleteCar/:id": {
            "delete": {
                "tags": [
                    "cars"
                ],
                "summary": "delete a car",
                "description": "delete a car",
                "parameters": [{
                    "name": "cars",
                    "in": "body",
                    "description": "car that we want to delete",
                    "schema": {
                        "$ref": "#/definitions/deleteCar"
                    }
                }],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "success:"
                    },
                    "404": {
                        "description": "Error: Not found"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },

        "/api/v1/getAllOrder": {
            "get": {
                "tags": [
                    "orders"
                ],
                "summary": "Get all posted order",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "name": "cars",
                    "in": "body",
                    "description": "get all order",
                    "schema":{
                         "$ref": "#/definitions/getAllOrder"
                    }

                }],
                "responses": {
                    "200": {
                        "description": "success: "
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/v1/addOrder": {
            "post": {
                "tags": [
                    "orders"
                ],
                "summary": "Post an order",
                "description": "User(buyer) can Post an order",
                "parameters": [{
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true

                    },
                    {
                        "name": "car sale ad",
                        "in": "body",
                        "description": "details of a car sale you want to post",
                        "schema": {
                            "$ref": "#/definitions/addOrder"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "success: when a car ad is sucessfully posted"
                    },
                    "400": {
                        "description": "Error: this is when someone  puts an invalid value"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/v1/updateOrderPrice/:id": {
            "patch": {
                "tags": [
                    "orders"
                ],
                "summary": "update price of the order",
                "description": "user can update price of his order",
                "parameters": [{
                        "name": "Authorization",
                        "in": "header",
                        "description": "The user token",
                        "required": true

                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "car id",
                        "required": true,
                        "type": "integer"

                    },
                    {
                        "name": "new status of car posted",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/updateOrderPrice"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "success: car succesfully marked as sold"
                    },
                    "400": {
                        "description": "Error: this is when someone  puts an invalid value"
                    },
                    "404": {
                        "description": "Error: order not found"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },

        "/api/v1/getAllFlag": {
            "get": {
                "tags": [
                    "flags"
                ],
                "summary": "Get all posted flag",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "name": "cars",
                    "in": "body",
                    "description": "get all flag",
                    "schema":{
                         "$ref": "#/definitions/getAllFlag"
                    }

                }],
                "responses": {
                    "200": {
                        "description": "success: "
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/v1/addFlag": {
            "post": {
                "tags": [
                    "flags"
                ],
                "summary": "Post a flag",
                "description": "User can Post a flag",
                "parameters": [{
                        "name": "Authorization",
                        "in": "header",
                        "description": "The flag",
                        "required": true

                    },
                    {
                        "name": "car sale ad",
                        "in": "body",
                        "description": "details of a flag you want to post",
                        "schema": {
                            "$ref": "#/definitions/addFlag"
                        }
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "201": {
                        "description": "success: when a car ad is sucessfully posted"
                    },
                    "400": {
                        "description": "Error: this is when someone  puts an invalid value"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        }


    },


    "definitions": {
        "getuser": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                }
            }
        },
        "getuserbyid": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                }
            }
        },
        "signup": {
            "required": [
                "firstName",
                "lastName",
                "email",
                "password",
                "adress"
            ],
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                }
            }
        },
        "updateuser": {
            "required": [
                "firstName",
                "lastName",
                "email",
                "password",
                "adress"
            ],
            "type": "object",
            "properties": {
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                }
            }
        },
        "signin": {
            "required": [
                "email",
                "password"
            ],
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "deleteuser": {
            "required": [
                "id"
            ]
        },
        "getAllCar": {
            "type": "object",
            "properties": {
                "id":{
                    "type":"integer"
                },
                "owner": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "date-time"
                }
            }
        },
        "getCarById": {
            "type": "object",
            "properties": {
                "id":{
                    "type":"integer"
                },
                "owner": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "date-time"
                }
            }
        },
        "addCar": {
            "required": [
                "owner",
                "email",
                "manufacturer",
                "model",
                "price",
                "state",
                "status",
                "description",
                "imgUrl"
            ],
            "type": "object",
            "properties": {
                "id":{
                    "type":"integer"
                },
                "owner": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string"
                }
            }
        },
        "markAsSold": {
            "required": [
                "status"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "owner": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string"
                }
            }
        },
        "updatePrice": {
            "required": [
                "price"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "owner": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "manufacturer": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "state": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "createdOn": {
                    "type": "string"
                }
            }
        },
        "deleteCar": {
            "required": [
                "id"
            ]
        },
         "getAllOrder": {
             "type": "object",
             "properties": {
                 "id": {
                     "type": "integer"
                 },
                 "buyer": {
                     "type": "integer"
                 },
                 "carId": {
                     "type": "integer"
                 },
                 "price": {
                     "type": "number"
                 },
                 "priceOffered": {
                     "type": "number"
                 },
                 "status": {
                     "type": "string"
                 },
                 "createdOn": {
                     "type": "date-time"
                 }
             }
         },
         "addOrder": {
             "required": [
                 "buyer",
                 "cardId",
                 "price",
                 "priceOffered",
                 "status",
                 "createdOn"
             ],
             "type": "object",
             "properties": {
                 "id": {
                     "type": "integer"
                 },
                 "buyer": {
                     "type": "integer"
                 },
                 "carId": {
                     "type": "integer"
                 },
                 "price": {
                     "type": "number"
                 },
                 "priceOffered": {
                     "type": "number"
                 },
                 "status": {
                     "type": "string"
                 },
                 "createdOn": {
                     "type": "date-time"
                 }
             }
         },
         "updateOrderPrice":{
             "required": [
                 "newPriceOffered"
             ],
             "properties": {
                     "type": "object",
                     "id": {
                         "type": "integer"
                     },
                     "buyer": {
                         "type": "integer"
                     },
                     "carId": {
                         "type": "integer"
                     },
                     "price": {
                         "type": "number"
                     },
                     "priceOffered": {
                         "type": "number"
                     },
                     "newPriceOffered": {
                         "type": "number"
                     },
                     "status": {
                         "type": "string"
                     },
                     "createdOn": {
                         "type": "date-time"
                     }
             }
         },

         "getAllFlag": {
             "type": "object",
             "properties": {
                 "id": {
                     "type": "integer"
                 },
                 "userId": {
                     "type": "integer"
                 },
                 "carId": {
                     "type": "integer"
                 },
                 "reason": {
                     "type": "string"
                 },
                 "description": {
                     "type": "string"
                 },
                 "createdOn": {
                     "type": "string"
                 }
             }
         },
         "addFlag": {
             "required": [
                 "userId",
                 "cardId",
                 "reason",
                 "description",
                 "createdOn"
             ],
             "type": "object",
              "properties": {
                  "id": {
                      "type": "integer"
                  },
                  "userId": {
                      "type": "integer"
                  },
                  "carId": {
                      "type": "integer"
                  },
                  "reason": {
                      "type": "string"
                  },
                  "description": {
                      "type": "string"
                  },
                  "createdOn": {
                      "type": "string"
                  }
              }
         }
    }
}